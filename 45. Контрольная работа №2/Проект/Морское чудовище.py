class BaskingShark:    def __init__(self, teeth, zheludok, color):        self.teeth = teeth        self.zhel = zheludok        self.color = color        self.fish_count = 0    def __str__(self):        return f'BaskingShark {self.teeth} - {self.color}'    def eat_fish(self, amount):        self.fish_count += amount        if self.fish_count >= 100:            self.teeth += self.fish_count // 100            self.fish_count = self.fish_count % 100    def swallow_ships(self, ship_size):        if ship_size <= self.zhel:            return True        return False    def gritting_its_teeth(self):        string = ''        for i in range(self.teeth // 50):            string += 'Creak'        return string    def __eq__(self, other):        if self.teeth == other.teeth:            return True        if self.zhel == other.zhel:            return True        if len(self.color) == len(other.color):            return True        if ord(self.color[0]) == ord(other.color[0]):            return True        return False    def __lt__(self, other):        if self.teeth < other.teeth:            return True        if self.zhel < other.zhel:            return True        if len(self.color) < len(other.color):            return True        if ord(self.color[0]) < ord(other.color[0]):            return True        return False    def __le__(self, other):        if self.teeth <= other.teeth:            return True        if self.zhel <= other.zhel:            return True        if len(self.color) <= len(other.color):            return True        if ord(self.color[0]) <= ord(other.color[0]):            return True        return False    def __gt__(self, other):        '''        first = False        if self.teeth > other.teeth:            first = True        second = False        if self.zhel > other.zhel:            second = True        third = False        if len(self.color) > len(other.color):            third = True        four = False        if ord(self.color[0]) > ord(other.color[0]):            four = True        if first and second and third and four:            return True        return False        '''        if self.teeth > other.teeth:            return True        if self.zhel > other.zhel:            return True        if len(self.color) > len(other.color):            return True        if ord(self.color[0]) > ord(other.color[0]):            return True        return False    def __ge__(self, other):        if self.teeth >= other.teeth:            return True        if self.zhel >= other.zhel:            return True        if len(self.color) >= len(other.color):            return True        if ord(self.color[0]) >= ord(other.color[0]):            return True        return False    def __ne__(self, other):        if self.teeth != other.teeth:            return True        if self.zhel != other.zhel:            return True        if len(self.color) != len(other.color):            return True        if ord(self.color[0]) != ord(other.color[0]):            return True        return False