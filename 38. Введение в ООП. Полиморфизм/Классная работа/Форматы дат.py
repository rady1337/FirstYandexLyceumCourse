class AmericanDate:    def __init__(self, year, month, day):        self.year = year        self.month = month        self.day = day    def get_year(self):        return(str(self.year))    def get_month(self):        return(str(self.month))    def get_day(self):        return(str(self.day))    def set_year(self, new_year):        self.year = new_year        return(str(self.year))    def set_month(self, new_month):        self.month = new_month        return(str(self.month))    def set_day(self, new_day):        self.day = new_day        return(str(self.day))    def format(self):        line = ''        if len(self.get_day()) == 1:            day = '0' + self.get_day()        else:            day = self.get_day()        if len(self.get_month()) == 1:            month = '0' + self.get_month()        else:            month = self.get_month()        year = self.get_year()        final_date = f'{month}.{day}.{year}'        return final_dateclass EuropeanDate:    def __init__(self, year, month, day):        self.year = year        self.month = month        self.day = day    def get_year(self):        return(str(self.year))    def get_month(self):        return(str(self.month))    def get_day(self):        return(str(self.day))    def set_year(self, new_year):        self.year = new_year        return(str(self.year))    def set_month(self, new_month):        self.month = new_month        return(str(self.month))    def set_day(self, new_day):        self.day = new_day        return(str(self.day))    def format(self):        line = ''        if len(self.get_day()) == 1:            day = '0' + self.get_day()        else:            day = self.get_day()        if len(self.get_month()) == 1:            month = '0' + self.get_month()        else:            month = self.get_month()        year = self.get_year()        final_date = f'{day}.{month}.{year}'        return final_date